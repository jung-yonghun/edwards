package com.edwards.biz.edwardsManagement;

import java.io.OutputStream;
import java.util.Map;
import java.net.URLEncoder;

import javax.servlet.http.HttpServletResponse;

import org.apache.ibatis.session.ResultContext;
import org.apache.ibatis.session.ResultHandler;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.hssf.usermodel.HSSFDataFormat;
import org.apache.poi.xssf.streaming.*;
import org.apache.poi.xssf.usermodel.*;

public class Draw1Excel implements ResultHandler<Map<String,Object>> {
	private HttpServletResponse response;
	private SXSSFSheet sheet;
	private SXSSFWorkbook workbook;
	private boolean isStarted = false;

	XSSFCellStyle style   = null;
	XSSFCellStyle style1  = null;
	XSSFCellStyle style20 = null;
	XSSFCellStyle style22 = null;

	public Draw1Excel(HttpServletResponse response){
		this.response = response;
		workbook = new SXSSFWorkbook(100);
		sheet = workbook.createSheet("환급통계");
		sheet.setColumnWidth(0, 3500);
		sheet.setColumnWidth(1, 3500);
		sheet.setColumnWidth(2, 3500);
		sheet.setColumnWidth(3, 1500);
		sheet.setColumnWidth(4, 1500);
		sheet.setColumnWidth(5, 2500);
		sheet.setColumnWidth(6, 2500);
		sheet.setColumnWidth(7, 2500);
		sheet.setColumnWidth(8, 3500);
		sheet.setColumnWidth(9, 1500);
		sheet.setColumnWidth(10, 2500);
		sheet.setColumnWidth(11, 2000);
		sheet.setColumnWidth(12, 2000);
		sheet.setColumnWidth(13, 1500);
		sheet.setColumnWidth(14, 1500);
		sheet.setColumnWidth(15, 4000);
		sheet.setColumnWidth(16, 1500);
		sheet.setColumnWidth(17, 1500);
		sheet.setColumnWidth(18, 2500);
		sheet.setColumnWidth(19, 1500);
		sheet.setColumnWidth(20, 1500);
		sheet.setColumnWidth(21, 3000);
		sheet.setColumnWidth(22, 3000);
		sheet.setColumnWidth(23, 2500);
		sheet.setColumnWidth(24, 1800);
		sheet.setColumnWidth(25, 1500);
		sheet.setColumnWidth(26, 2500);
		sheet.setColumnWidth(27, 1500);
		sheet.setColumnWidth(28, 1500);
		sheet.setColumnWidth(29, 1500);
		sheet.setColumnWidth(30, 1500);
		sheet.setColumnWidth(31, 4000);
		sheet.setColumnWidth(32, 1500);
		sheet.setColumnWidth(33, 1500);
		sheet.setColumnWidth(34, 2500);
		sheet.setColumnWidth(35, 2500);
		sheet.setColumnWidth(36, 3000);
		sheet.setColumnWidth(37, 3000);
		sheet.setColumnWidth(38, 1800);
		sheet.setColumnWidth(39, 1500);
		sheet.setColumnWidth(40, 2500);
		sheet.setColumnWidth(41, 2500);
		sheet.setColumnWidth(42, 2500);
		sheet.setColumnWidth(43, 2500);
		sheet.setColumnWidth(44, 2500);
		sheet.setColumnWidth(45, 2500);
		sheet.setColumnWidth(46, 2500);
		sheet.setColumnWidth(47, 2500);
		sheet.setColumnWidth(48, 2500);
		sheet.setColumnWidth(49, 2500);
		sheet.setColumnWidth(50, 2500);
		sheet.setColumnWidth(51, 2500);
		sheet.setColumnWidth(52, 2500);
		sheet.setColumnWidth(53, 2500);
		sheet.setColumnWidth(54, 1500);
		sheet.setColumnWidth(55, 1500);
		sheet.setColumnWidth(56, 1500);
		sheet.setColumnWidth(57, 1800);
		sheet.setColumnWidth(58, 1800);
		sheet.setColumnWidth(59, 1800);
		sheet.setColumnWidth(60, 1800);
		sheet.setColumnWidth(61, 1800);
		sheet.setColumnWidth(62, 3000);
		sheet.setColumnWidth(63, 1800);
		sheet.setColumnWidth(64, 1500);
		sheet.setColumnWidth(65, 1800);
		sheet.setColumnWidth(66, 1800);
		sheet.setColumnWidth(67, 1500);
		sheet.setColumnWidth(68, 3000);
	}

	@Override
	public void handleResult(ResultContext<? extends Map<String, Object>> result){
		try {
			if(!isStarted){
        		style   = (XSSFCellStyle) workbook.createCellStyle();
        		style1  = (XSSFCellStyle) workbook.createCellStyle();
        		style20 = (XSSFCellStyle) workbook.createCellStyle();
        		style22 = (XSSFCellStyle) workbook.createCellStyle();

        		style.setBorderBottom(BorderStyle.THIN);
            	style.setBorderLeft(BorderStyle.THIN);
            	style.setBorderRight(BorderStyle.THIN);
            	style.setBorderTop(BorderStyle.THIN);
        		style.setAlignment(HorizontalAlignment.CENTER);

        		style1.setBorderBottom(BorderStyle.THIN);
            	style1.setBorderLeft(BorderStyle.THIN);
            	style1.setBorderRight(BorderStyle.THIN);
            	style1.setBorderTop(BorderStyle.THIN);

        		style20.setDataFormat(HSSFDataFormat.getBuiltinFormat("#,##0"));
        		style20.setBorderBottom(BorderStyle.THIN);
            	style20.setBorderLeft(BorderStyle.THIN);
            	style20.setBorderRight(BorderStyle.THIN);
            	style20.setBorderTop(BorderStyle.THIN);
        		style20.setAlignment(HorizontalAlignment.RIGHT);

        		style22.setDataFormat(HSSFDataFormat.getBuiltinFormat("#,##0.00"));
        		style22.setBorderBottom(BorderStyle.THIN);
        		style22.setBorderLeft(BorderStyle.THIN);
        		style22.setBorderRight(BorderStyle.THIN);
        		style22.setBorderTop(BorderStyle.THIN);
        		style22.setAlignment(HorizontalAlignment.RIGHT);

        		response.setHeader("Content-Disposition","attachment;filename=\""+URLEncoder.encode("환급통계.xlsx", "UTF-8")+"\"");
        		isStarted = true;
        		SXSSFRow row = sheet.createRow(0);
        		SXSSFCell cell = row.createCell(0);
        		cell.setCellValue("제출번호");
        		cell.setCellStyle(style);
        		cell = row.createCell(1);
        		cell.setCellValue("신청인상호");
        		cell.setCellStyle(style);
        		cell = row.createCell(2);
        		cell.setCellValue("제조업체상호");
        		cell.setCellStyle(style);
        		cell = row.createCell(3);
        		cell.setCellValue("접수기관부호");
        		cell.setCellStyle(style);
        		cell = row.createCell(4);
        		cell.setCellValue("접수년도");
        		cell.setCellStyle(style);
        		cell = row.createCell(5);
        		cell.setCellValue("접수번호");
        		cell.setCellStyle(style);
        		cell = row.createCell(6);
        		cell.setCellValue("접수일자");
        		cell.setCellStyle(style);
        		cell = row.createCell(7);
        		cell.setCellValue("결정일자");
        		cell.setCellStyle(style);
        		cell = row.createCell(8);
        		cell.setCellValue("XML번호");
        		cell.setCellStyle(style);
        		cell = row.createCell(9);
        		cell.setCellValue("그룹코드");
        		cell.setCellStyle(style);
        		cell = row.createCell(10);
        		cell.setCellValue("작업번호");
        		cell.setCellStyle(style);
        		cell = row.createCell(11);
        		cell.setCellValue("란일련번호");
        		cell.setCellStyle(style);
        		cell = row.createCell(12);
        		cell.setCellValue("제품일련번호");
        		cell.setCellStyle(style);
        		cell = row.createCell(13);
        		cell.setCellValue("자재일련번호");
        		cell.setCellStyle(style);
        		cell = row.createCell(14);
        		cell.setCellValue("대상물품구분");
        		cell.setCellStyle(style);
        		cell = row.createCell(15);
        		cell.setCellValue("수출신고번호");
        		cell.setCellStyle(style);
        		cell = row.createCell(16);
        		cell.setCellValue("수출란번호");
        		cell.setCellStyle(style);
        		cell = row.createCell(17);
        		cell.setCellValue("수출제품번호");
        		cell.setCellStyle(style);
        		cell = row.createCell(18);
        		cell.setCellValue("수출수리일자");
        		cell.setCellStyle(style);
        		cell = row.createCell(19);
        		cell.setCellValue("수출형태");
        		cell.setCellStyle(style);
        		cell = row.createCell(20);
        		cell.setCellValue("수출국");
        		cell.setCellStyle(style);
        		cell = row.createCell(21);
        		cell.setCellValue("수출세번부호");
        		cell.setCellStyle(style);
        		cell = row.createCell(22);
        		cell.setCellValue("수출제품코드");
        		cell.setCellStyle(style);
        		cell = row.createCell(23);
        		cell.setCellValue("수출결제금액");
        		cell.setCellStyle(style);
        		cell = row.createCell(24);
        		cell.setCellValue("수출실수출물량");
        		cell.setCellStyle(style);
        		cell = row.createCell(25);
        		cell.setCellValue("수출실물량단위");
        		cell.setCellStyle(style);
        		cell = row.createCell(26);
        		cell.setCellValue("소요원자재코드");
        		cell.setCellStyle(style);
        		cell = row.createCell(27);
        		cell.setCellValue("계산근거");
        		cell.setCellStyle(style);
        		cell = row.createCell(28);
        		cell.setCellValue("소요량");
        		cell.setCellStyle(style);
        		cell = row.createCell(29);
        		cell.setCellValue("수출물량기준 필요량");
        		cell.setCellStyle(style);
        		cell = row.createCell(30);
        		cell.setCellValue("원재료구분");
        		cell.setCellStyle(style);
        		cell = row.createCell(31);
        		cell.setCellValue("원재료신고번호");
        		cell.setCellStyle(style);
        		cell = row.createCell(32);
        		cell.setCellValue("원재료란번호");
        		cell.setCellStyle(style);
        		cell = row.createCell(33);
        		cell.setCellValue("원재료자재번호");
        		cell.setCellStyle(style);
        		cell = row.createCell(34);
        		cell.setCellValue("원재료수리일자");
        		cell.setCellStyle(style);
        		cell = row.createCell(35);
        		cell.setCellValue("원재료양도일자");
        		cell.setCellStyle(style);
        		cell = row.createCell(36);
        		cell.setCellValue("원재료세번부호");
        		cell.setCellStyle(style);
        		cell = row.createCell(37);
        		cell.setCellValue("원재료사용자재코드");
        		cell.setCellStyle(style);
        		cell = row.createCell(38);
        		cell.setCellValue("사용량");
        		cell.setCellStyle(style);
        		cell = row.createCell(39);
        		cell.setCellValue("사용단위");
        		cell.setCellStyle(style);
        		cell = row.createCell(40);
        		cell.setCellValue("총세액(부산물포함)");
        		cell.setCellStyle(style);
        		cell = row.createCell(41);
        		cell.setCellValue("총세액(부산물제외)");
        		cell.setCellStyle(style);
        		cell = row.createCell(42);
        		cell.setCellValue("관세(부산물포함)");
        		cell.setCellStyle(style);
        		cell = row.createCell(43);
        		cell.setCellValue("관세(부산물제외)");
        		cell.setCellStyle(style);
        		cell = row.createCell(44);
        		cell.setCellValue("개별소비세(부산물포함)");
        		cell.setCellStyle(style);
        		cell = row.createCell(45);
        		cell.setCellValue("개별소비세(부산물제외)");
        		cell.setCellStyle(style);
        		cell = row.createCell(46);
        		cell.setCellValue("교통세(부산물포함)");
        		cell.setCellStyle(style);
        		cell = row.createCell(47);
        		cell.setCellValue("교통세(부산물제외)");
        		cell.setCellStyle(style);
        		cell = row.createCell(48);
        		cell.setCellValue("주세(부산물포함)");
        		cell.setCellStyle(style);
        		cell = row.createCell(49);
        		cell.setCellValue("주세(부산물제외)");
        		cell.setCellStyle(style);
        		cell = row.createCell(50);
        		cell.setCellValue("교육세(부산물포함)");
        		cell.setCellStyle(style);
        		cell = row.createCell(51);
        		cell.setCellValue("교육세(부산물제외)");
        		cell.setCellStyle(style);
        		cell = row.createCell(52);
        		cell.setCellValue("농특세(부산물포함)");
        		cell.setCellStyle(style);
        		cell = row.createCell(53);
        		cell.setCellValue("농특세(부산물제외)");
        		cell.setCellStyle(style);
        		cell = row.createCell(54);
        		cell.setCellValue("단축배제대상여부");
        		cell.setCellStyle(style);
        		cell = row.createCell(55);
        		cell.setCellValue("세율별비중대상여부");
        		cell.setCellStyle(style);
        		cell = row.createCell(56);
        		cell.setCellValue("세율별계산여부");
        		cell.setCellStyle(style);
        		cell = row.createCell(57);
        		cell.setCellValue("관세율");
        		cell.setCellStyle(style);
        		cell = row.createCell(58);
        		cell.setCellValue("세율별비중");
        		cell.setCellStyle(style);
        		cell = row.createCell(59);
        		cell.setCellValue("부산물구분");
        		cell.setCellStyle(style);
        		cell = row.createCell(60);
        		cell.setCellValue("부산물공제비율");
        		cell.setCellStyle(style);
        		cell = row.createCell(61);
        		cell.setCellValue("부산물코드");
        		cell.setCellStyle(style);
        		cell = row.createCell(62);
        		cell.setCellValue("부산물세번부호");
        		cell.setCellStyle(style);
        		cell = row.createCell(63);
        		cell.setCellValue("부산물물량");
        		cell.setCellStyle(style);
        		cell = row.createCell(64);
        		cell.setCellValue("부산물물량단위");
        		cell.setCellStyle(style);
        		cell = row.createCell(65);
        		cell.setCellValue("부산물총세액");
        		cell.setCellStyle(style);
        		cell = row.createCell(66);
        		cell.setCellValue("부산물공제금액");
        		cell.setCellStyle(style);
        		cell = row.createCell(67);
        		cell.setCellValue("수출월");
        		cell.setCellStyle(style);
        		cell = row.createCell(68);
        		cell.setCellValue("화주");
        		cell.setCellStyle(style);
        	}

        	Map<String, Object> dataRow = result.getResultObject();
        	Row row = sheet.createRow(result.getResultCount());
        	Cell cell = null;
        	cell = row.createCell(0);
        	cell.setCellValue(dataRow.get("PreNo")==null ? "" : dataRow.get("PreNo").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(1);
        	cell.setCellValue(dataRow.get("SinName")==null ? "" : dataRow.get("SinName").toString());
        	cell.setCellStyle(style1);
        	cell = row.createCell(2);
        	cell.setCellValue(dataRow.get("JeJoName")==null ? "" : dataRow.get("JeJoName").toString());
        	cell.setCellStyle(style1);
        	cell = row.createCell(3);
        	cell.setCellValue(dataRow.get("JubSuNo1")==null ? "" : dataRow.get("JubSuNo1").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(4);
        	cell.setCellValue(dataRow.get("JubSuNo2")==null ? "" : dataRow.get("JubSuNo2").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(5);
        	cell.setCellValue(dataRow.get("JubSuNo3")==null ? "" : dataRow.get("JubSuNo3").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(6);
        	cell.setCellValue(dataRow.get("DrawJubSuDate")==null ? "" : dataRow.get("DrawJubSuDate").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(7);
        	cell.setCellValue(dataRow.get("DrawOkDate")==null ? "" : dataRow.get("DrawOkDate").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(8);
        	cell.setCellValue(dataRow.get("XmlNo")==null ? "" : dataRow.get("XmlNo").toString());
        	cell.setCellStyle(style1);
        	cell = row.createCell(9);
        	cell.setCellValue(dataRow.get("GroupCode")==null ? "" : dataRow.get("GroupCode").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(10);
        	cell.setCellValue(dataRow.get("JobNo")==null ? "" : dataRow.get("JobNo").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(11);
        	cell.setCellValue(dataRow.get("RanSEQ")==null ? "" : dataRow.get("RanSEQ").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(12);
        	cell.setCellValue(dataRow.get("JepumSEQ")==null ? "" : dataRow.get("JepumSEQ").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(13);
        	cell.setCellValue(dataRow.get("ItemSEQ")==null ? "" : dataRow.get("ItemSEQ").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(14);
        	cell.setCellValue(dataRow.get("JpepumGbn")==null ? "" : dataRow.get("JpepumGbn").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(15);
        	cell.setCellValue(dataRow.get("ExpoSingoNo")==null ? "" : dataRow.get("ExpoSingoNo").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(16);
        	cell.setCellValue(dataRow.get("ExpoLan")==null ? "" : dataRow.get("ExpoLan").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(17);
        	cell.setCellValue(dataRow.get("ExpoHeng")==null ? "" : dataRow.get("ExpoHeng").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(18);
        	cell.setCellValue(dataRow.get("ExpoOkDate")==null ? "" : dataRow.get("ExpoOkDate").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(19);
        	cell.setCellValue(dataRow.get("ExpoForm")==null ? "" : dataRow.get("ExpoForm").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(20);
        	cell.setCellValue(dataRow.get("ExpoCntr")==null ? "" : dataRow.get("ExpoCntr").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(21);
        	cell.setCellValue(dataRow.get("ExpoHS")==null ? "" : dataRow.get("ExpoHS").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(22);
        	cell.setCellValue(dataRow.get("ExpoJepumCD")==null ? "" : dataRow.get("ExpoJepumCD").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(23);
        	cell.setCellValue(Double.parseDouble(dataRow.get("ExpoFobKRW").toString())==0 ? 0 : Double.parseDouble(dataRow.get("ExpoFobKRW").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(24);
        	cell.setCellValue(Double.parseDouble(dataRow.get("ExpoQty").toString())==0 ? 0 : Double.parseDouble(dataRow.get("ExpoQty").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(25);
        	cell.setCellValue(dataRow.get("ExpoQtyUnit")==null ? "" : dataRow.get("ExpoQtyUnit").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(26);
        	cell.setCellValue(dataRow.get("ItemCD")==null ? "" : dataRow.get("ItemCD").toString());
        	cell.setCellStyle(style1);
        	cell = row.createCell(27);
        	cell.setCellValue(Double.parseDouble(dataRow.get("CalcGbn").toString())==0 ? 0 : Double.parseDouble(dataRow.get("CalcGbn").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(28);
        	cell.setCellValue(Double.parseDouble(dataRow.get("SpYpMthCD").toString())==0 ? 0 : Double.parseDouble(dataRow.get("SpYpMthCD").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(29);
        	cell.setCellValue(Double.parseDouble(dataRow.get("ExpoUseQty").toString())==0 ? 0 : Double.parseDouble(dataRow.get("ExpoUseQty").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(30);
        	cell.setCellValue(dataRow.get("OriDivi")==null ? "" : dataRow.get("OriDivi").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(31);
        	cell.setCellValue(dataRow.get("ImpoSingoNo")==null ? "" : dataRow.get("ImpoSingoNo").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(32);
        	cell.setCellValue(dataRow.get("ImpoLan")==null ? "" : dataRow.get("ImpoLan").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(33);
        	cell.setCellValue(dataRow.get("ImpoHng")==null ? "" : dataRow.get("ImpoHng").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(34);
        	cell.setCellValue(dataRow.get("ImpoOkDate")==null ? "" : dataRow.get("ImpoOkDate").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(35);
        	cell.setCellValue(dataRow.get("YangDoDate")==null ? "" : dataRow.get("YangDoDate").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(36);
        	cell.setCellValue(dataRow.get("ItemHS")==null ? "" : dataRow.get("ItemHS").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(37);
        	cell.setCellValue(dataRow.get("OriItemCD")==null ? "" : dataRow.get("OriItemCD").toString());
        	cell.setCellStyle(style1);
        	cell = row.createCell(38);
        	cell.setCellValue(Double.parseDouble(dataRow.get("ImpoQty").toString())==0 ? 0 : Double.parseDouble(dataRow.get("ImpoQty").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(39);
        	cell.setCellValue(dataRow.get("ImpoQtyUnit")==null ? "" : dataRow.get("ImpoQtyUnit").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(40);
        	cell.setCellValue(Double.parseDouble(dataRow.get("TotTaxA").toString())==0 ? 0 : Double.parseDouble(dataRow.get("TotTaxA").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(41);
        	cell.setCellValue(Double.parseDouble(dataRow.get("TotTaxB").toString())==0 ? 0 : Double.parseDouble(dataRow.get("TotTaxB").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(42);
        	cell.setCellValue(Double.parseDouble(dataRow.get("GwanTaxA").toString())==0 ? 0 : Double.parseDouble(dataRow.get("GwanTaxA").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(43);
        	cell.setCellValue(Double.parseDouble(dataRow.get("GwanTaxB").toString())==0 ? 0 : Double.parseDouble(dataRow.get("GwanTaxB").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(44);
        	cell.setCellValue(Double.parseDouble(dataRow.get("TekTaxA").toString())==0 ? 0 : Double.parseDouble(dataRow.get("TekTaxA").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(45);
        	cell.setCellValue(Double.parseDouble(dataRow.get("TekTaxB").toString())==0 ? 0 : Double.parseDouble(dataRow.get("TekTaxB").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(46);
        	cell.setCellValue(Double.parseDouble(dataRow.get("GtTaxA").toString())==0 ? 0 : Double.parseDouble(dataRow.get("GtTaxA").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(47);
        	cell.setCellValue(Double.parseDouble(dataRow.get("GtTaxB").toString())==0 ? 0 : Double.parseDouble(dataRow.get("GtTaxB").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(48);
        	cell.setCellValue(Double.parseDouble(dataRow.get("JuTaxA").toString())==0 ? 0 : Double.parseDouble(dataRow.get("JuTaxA").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(49);
        	cell.setCellValue(Double.parseDouble(dataRow.get("JuTaxB").toString())==0 ? 0 : Double.parseDouble(dataRow.get("JuTaxB").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(50);
        	cell.setCellValue(Double.parseDouble(dataRow.get("EduTaxA").toString())==0 ? 0 : Double.parseDouble(dataRow.get("EduTaxA").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(51);
        	cell.setCellValue(Double.parseDouble(dataRow.get("EduTaxB").toString())==0 ? 0 : Double.parseDouble(dataRow.get("EduTaxB").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(52);
        	cell.setCellValue(Double.parseDouble(dataRow.get("NongTaxA").toString())==0 ? 0 : Double.parseDouble(dataRow.get("NongTaxA").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(53);
        	cell.setCellValue(Double.parseDouble(dataRow.get("NongTaxB").toString())==0 ? 0 : Double.parseDouble(dataRow.get("NongTaxB").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(54);
        	cell.setCellValue(dataRow.get("HSShotYN")==null ? "" : dataRow.get("HSShotYN").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(55);
        	cell.setCellValue(dataRow.get("HSRateYN")==null ? "" : dataRow.get("HSRateYN").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(56);
        	cell.setCellValue(dataRow.get("HSRateCalcYN")==null ? "" : dataRow.get("HSRateCalcYN").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(57);
        	cell.setCellValue(Double.parseDouble(dataRow.get("HsRate").toString())==0 ? 0 : Double.parseDouble(dataRow.get("HsRate").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(58);
        	cell.setCellValue(Double.parseDouble(dataRow.get("HsRateSpec").toString())==0 ? 0 : Double.parseDouble(dataRow.get("HsRateSpec").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(59);
        	cell.setCellValue(dataRow.get("ProdGbn")==null ? "" : dataRow.get("ProdGbn").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(60);
        	cell.setCellValue(Double.parseDouble(dataRow.get("ProdRate").toString())==0 ? 0 : Double.parseDouble(dataRow.get("ProdRate").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(61);
        	cell.setCellValue(dataRow.get("ProdCode")==null ? "" : dataRow.get("ProdCode").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(62);
        	cell.setCellValue(dataRow.get("ProdHs")==null ? "" : dataRow.get("ProdHs").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(63);
        	cell.setCellValue(Double.parseDouble(dataRow.get("ProdQty").toString())==0 ? 0 : Double.parseDouble(dataRow.get("ProdQty").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(64);
        	cell.setCellValue(dataRow.get("ProdQtyUnit")==null ? "" : dataRow.get("ProdQtyUnit").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(65);
        	cell.setCellValue(Double.parseDouble(dataRow.get("ProdTotTax").toString())==0 ? 0 : Double.parseDouble(dataRow.get("ProdTotTax").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(66);
        	cell.setCellValue(Double.parseDouble(dataRow.get("ProdMinusTax").toString())==0 ? 0 : Double.parseDouble(dataRow.get("ProdMinusTax").toString()));
        	cell.setCellStyle(style20);
        	cell = row.createCell(67);
        	cell.setCellValue(dataRow.get("ExpoMon")==null ? "" : dataRow.get("ExpoMon").toString());
        	cell.setCellStyle(style);
        	cell = row.createCell(68);
        	cell.setCellValue(dataRow.get("WhaJuName")==null ? "" : dataRow.get("WhaJuName").toString());
        	cell.setCellStyle(style1);
		} catch (Exception e) {
			throw new RuntimeException("JSON streaming Exception", e);
		}
	}

	public void close(){
		try{
			workbook.write(response.getOutputStream());
			workbook.dispose();
		}catch (Exception e){
			response.setHeader("Set-Cookie", "fileDownload=false;path=/");
			response.setHeader("Cache-Control", "no-cache,no-store,must-revalidate");
			response.setHeader("Content-Type", "text/html;charset=utf-8");
			OutputStream out = null;
			try{
				out = response.getOutputStream();
				byte[] data = new String("fail Download.....").getBytes();
				out.write(data,0,data.length);
			}catch(Exception ex){
			}
		}finally{
			if(workbook != null){
				try{ workbook.close();}catch(Exception ex){}
			}
		}
	}
}